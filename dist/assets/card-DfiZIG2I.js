import{bz as w,bA as k,c as g}from"./index-DYN_J6N2.js";const r=[];for(let e=0;e<256;++e)r.push((e+256).toString(16).slice(1));function y(e,t=0){return(r[e[t+0]]+r[e[t+1]]+r[e[t+2]]+r[e[t+3]]+"-"+r[e[t+4]]+r[e[t+5]]+"-"+r[e[t+6]]+r[e[t+7]]+"-"+r[e[t+8]]+r[e[t+9]]+"-"+r[e[t+10]]+r[e[t+11]]+r[e[t+12]]+r[e[t+13]]+r[e[t+14]]+r[e[t+15]]).toLowerCase()}let D;const h=new Uint8Array(16);function x(){if(!D){if(typeof crypto>"u"||!crypto.getRandomValues)throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");D=crypto.getRandomValues.bind(crypto)}return D(h)}const O=typeof crypto<"u"&&crypto.randomUUID&&crypto.randomUUID.bind(crypto),m={randomUUID:O};function C(e,t,o){var l;if(m.randomUUID&&!e)return m.randomUUID();e=e||{};const c=e.random??((l=e.rng)==null?void 0:l.call(e))??x();if(c.length<16)throw new Error("Random bytes length must be >= 16");return c[6]=c[6]&15|64,c[8]=c[8]&63|128,y(c)}const b=w("deck",()=>{const e=k("flashcard-decks",[{id:"1",title:"示例卡片集",description:"这是一个示例卡片集，用于展示系统功能",tags:["示例","入门"],createdAt:new Date().toISOString(),updatedAt:new Date().toISOString(),cardsCount:2}]),t=g(()=>e.value),o=g(()=>u=>e.value.find(a=>a.id===u)),c=g(()=>u=>e.value.filter(a=>a.tags.includes(u)));function l(u){const a={id:C(),...u,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString(),cardsCount:0};return e.value.push(a),a.id}function v(u,a){const i=e.value.findIndex(S=>S.id===u);return i!==-1?(e.value[i]={...e.value[i],...a,updatedAt:new Date().toISOString()},!0):!1}function p(u){const a=e.value.findIndex(i=>i.id===u);return a!==-1?(e.value.splice(a,1),!0):!1}function I(u,a){const i=e.value.find(S=>S.id===u);return i?(i.cardsCount=a,!0):!1}return{decks:e,allDecks:t,getDeckById:o,getDecksByTag:c,addDeck:l,updateDeck:v,deleteDeck:p,updateCardCount:I}}),V=w("card",()=>{const e=b(),t=k("flashcard-cards",[{id:"1",deckId:"1",front:"什么是Vue.js?",back:"Vue.js是一个用于构建用户界面的渐进式JavaScript框架，专注于视图层。",tags:["Vue","前端"],createdAt:new Date().toISOString(),updatedAt:new Date().toISOString(),mediaAttachments:[]},{id:"2",deckId:"1",front:"Vue 3的组合式API有什么优势?",back:"组合式API提供了更好的代码组织方式、逻辑复用能力、类型推导，并且对tree-shaking更友好。",tags:["Vue","组合式API"],createdAt:new Date().toISOString(),updatedAt:new Date().toISOString(),mediaAttachments:[]}]),o=k("flashcard-cards-progress",{}),c=g(()=>t.value),l=g(()=>n=>t.value.filter(d=>d.deckId===n)),v=g(()=>n=>t.value.find(d=>d.id===n)),p=g(()=>n=>t.value.filter(d=>d.tags.includes(n)));function I(n){const d={id:C(),...n,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString(),mediaAttachments:n.mediaAttachments||[]};t.value.push(d);const s=l.value(d.deckId);return e.updateCardCount(d.deckId,s.length),d.id}function u(n,d){const s=t.value.findIndex(f=>f.id===n);return s!==-1?(t.value[s]={...t.value[s],...d,updatedAt:new Date().toISOString()},!0):!1}function a(n){const d=t.value.findIndex(s=>s.id===n);if(d!==-1){const s=t.value[d].deckId;t.value.splice(d,1);const f=l.value(s);return e.updateCardCount(s,f.length),!0}return!1}function i(n,d){o.value[n]={...o.value[n],...d,lastReviewed:new Date().toISOString()}}function S(n){return o.value[n]||{easeFactor:2.5,interval:0,repetitions:0,dueDate:new Date().toISOString(),lastReviewed:null}}function A(n){return o.value[n]?(delete o.value[n],!0):!1}return{cards:t,cardsProgress:o,allCards:c,getCardsByDeck:l,getCardById:v,getCardsByTag:p,addCard:I,updateCard:u,deleteCard:a,updateCardProgress:i,getCardProgress:S,resetCardProgress:A}});export{V as a,b as u};
