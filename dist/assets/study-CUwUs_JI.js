import{bz as m,j as y,bA as h,c as D}from"./index-DYN_J6N2.js";import{a as x}from"./card-DfiZIG2I.js";function P(r,e){const{easeFactor:n=2.5,interval:l=0,repetitions:c=0}=r||{};let a=n,s=l,i=c;e<3?(i=0,s=1):(i+=1,i===1?s=1:i===2?s=6:s=Math.round(s*a)),a=a+(.1-(5-e)*(.08+(5-e)*.02)),a<1.3&&(a=1.3);const w=new Date,v=new Date;return v.setDate(w.getDate()+s),{easeFactor:a,interval:s,repetitions:i,dueDate:v.toISOString(),lastReviewed:w.toISOString()}}function O(r){const e=Object.keys(r).length;if(e===0)return{retention:0,mastered:0,learning:0,new:0};let n=0,l=0,c=0;for(const a in r){const s=r[a];s.repetitions>=3&&s.easeFactor>2?n++:s.repetitions>0?l++:c++}return{retention:Math.round(n/e*100),mastered:n,learning:l,new:c}}const M=m("study",()=>{const r=x(),e=y({deckId:null,cards:[],currentIndex:0,showAnswer:!1,completed:!1}),n=h("flashcard-study-stats",{totalReviews:0,correctReviews:0,sessionHistory:[]}),l=h("flashcard-daily-goal",30),c=D(()=>{const t=new Date().toISOString().split("T")[0];return Object.values(r.cardsProgress).filter(o=>o.lastReviewed?o.lastReviewed.split("T")[0]===t:!1).length}),a=D(()=>Math.min(100,Math.round(c.value/l.value*100))),s=D(()=>{const t=new Date;return r.allCards.filter(d=>{const u=r.getCardProgress(d.id);return u.dueDate?new Date(u.dueDate)<=t:!0})});function i(t=null){let o;t?o=r.getCardsByDeck(t).filter(u=>{const f=r.getCardProgress(u.id);return f.dueDate?new Date(f.dueDate)<=new Date:!0}):o=[...s.value];const d=o.sort(()=>Math.random()-.5).map(u=>u.id);return e.value={deckId:t,cards:d,currentIndex:0,showAnswer:!1,completed:d.length===0},d.length}function w(){if(e.value.currentIndex>=e.value.cards.length)return null;const t=e.value.cards[e.value.currentIndex];return r.getCardById(t)}function v(){e.value.showAnswer=!0}function S(t){const o=e.value.cards[e.value.currentIndex],d=r.getCardProgress(o),u=P(d,t);r.updateCardProgress(o,u),n.value.totalReviews++,t>=3&&n.value.correctReviews++;const f=new Date().toISOString().split("T")[0],g=n.value.sessionHistory.find(I=>I.date===f);return g?(g.cards++,g.correct+=t>=3?1:0):n.value.sessionHistory.push({date:f,cards:1,correct:t>=3?1:0}),e.value.currentIndex++,e.value.showAnswer=!1,e.value.currentIndex>=e.value.cards.length&&(e.value.completed=!0),e.value.completed}function p(){e.value={deckId:null,cards:[],currentIndex:0,showAnswer:!1,completed:!1}}function C(t){l.value=t}return{currentSession:e,studyStats:n,dailyGoal:l,todayLearned:c,todayProgress:a,dueCards:s,startStudySession:i,getCurrentCard:w,showAnswer:v,answerCard:S,resetSession:p,setDailyGoal:C}});export{O as a,M as u};
